{"version":3,"sources":["android-api-to-public-api-transform.tsx"],"names":["BehaviorSubject","androidAPIToPublicAPITransform","bringgDriverSdkAndroidType","logout","startTask","loginWithToken","arriveAtWaypoint","arriveAtWaypointWithCustomerVehicle","arriveAtWaypointWithCustomerVehicleAndVehicleId","leaveWaypoint","updateWaypointEta","addListenerToActiveTask","addListenerToIsLoggedIn","setUserTransportType","isLoggedInSubject","activeTaskSubject","initBringgDriverSDK","flags","console","log","init","activeTask","next","isLoggedIn","activeCustomerManager","updateWaypointETA","eta","etaString","toISOString","customerVehicle","id","info","save_vehicle","license_plate","color","model","parking_spot"],"mappings":"AAEA,SAASA,eAAT,QAAgC,MAAhC;AAKA;AACA,OAAO,SAASC,8BAAT,CACLC,0BADK,EAEgB;AACrB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,mCALI;AAMJC,IAAAA,+CANI;AAOJC,IAAAA,aAPI;AAQJC,IAAAA,iBARI;AASJC,IAAAA,uBATI;AAUJC,IAAAA,uBAVI;AAWJC,IAAAA;AAXI,MAYFX,0BAZJ;AAcA,QAAMY,iBAAiB,GAAG,IAAId,eAAJ,CAA6B,KAA7B,CAA1B;AACA,QAAMe,iBAAiB,GAAG,IAAIf,eAAJ,CAAiC,IAAjC,CAA1B;;AAEA,QAAMgB,mBAAmB,GAAG,MAC1BC,KAD0B,IAER;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBF,KAAjC;AACA,UAAMf,0BAA0B,CAACkB,IAA3B,CAAgCH,KAAhC,aAAgCA,KAAhC,cAAgCA,KAAhC,GAAyC,IAAzC,CAAN;AACA,UAAMN,uBAAuB,CAAEU,UAAD,IAC5BN,iBAAiB,CAACO,IAAlB,CAAuBD,UAAvB,CAD2B,CAA7B;AAGA,UAAMT,uBAAuB,CAAEW,UAAD,IAAgB;AAC5CT,MAAAA,iBAAiB,CAACQ,IAAlB,CAAuBC,UAAvB;AACD,KAF4B,CAA7B;AAGD,GAXD;;AAaA,QAAMC,qBAAgD,GAAG;AACvDD,IAAAA,UAAU,EAAET,iBAD2C;AAEvDT,IAAAA,cAFuD;AAGvDF,IAAAA,MAHuD;AAIvDC,IAAAA,SAJuD;AAKvDE,IAAAA,gBALuD;AAMvDG,IAAAA,aANuD;AAOvDgB,IAAAA,iBAAiB,EAAGC,GAAD,IAA8B;AAC/C,YAAMC,SAAS,GAAGD,GAAG,CAACE,WAAJ,EAAlB;AACA,aAAOlB,iBAAiB,CAACiB,SAAD,CAAxB;AACD,KAVsD;AAWvDN,IAAAA,UAAU,EAAEN,iBAX2C;AAYvDF,IAAAA,oBAZuD;AAavDN,IAAAA,mCAAmC,EACjCsB,eADmC,IAEjB;AAClB,UAAIA,eAAe,CAACC,EAAhB,IAAsB,IAA1B,EAAgC;AAC9BZ,QAAAA,OAAO,CAACa,IAAR,CACE,6DADF;AAGA,eAAOxB,mCAAmC,CACxCsB,eAAe,CAACG,YADwB,EAExCH,eAAe,CAACI,aAFwB,EAGxCJ,eAAe,CAACK,KAHwB,EAIxCL,eAAe,CAACM,KAJwB,EAKxCN,eAAe,CAACO,YALwB,CAA1C;AAOD,OAXD,MAWO;AACLlB,QAAAA,OAAO,CAACa,IAAR,CAAa,0CAAb;AACA,eAAOvB,+CAA+C,CACpDqB,eAAe,CAACC,EADoC,EAEpDD,eAAe,CAACG,YAFoC,EAGpDH,eAAe,CAACI,aAHoC,EAIpDJ,eAAe,CAACK,KAJoC,EAKpDL,eAAe,CAACM,KALoC,EAMpDN,eAAe,CAACO,YANoC,CAAtD;AAQD;AACF;AAtCsD,GAAzD;AAwCA,SAAO;AAAEpB,IAAAA,mBAAF;AAAuBQ,IAAAA;AAAvB,GAAP;AACD","sourcesContent":["import { BringgDriverSDKType, ActiveCustomerManagerType } from './index';\nimport { Task } from './models/task';\nimport { BehaviorSubject } from 'rxjs';\nimport { BringgDriverSdkAndroidType } from './android';\nimport { SDKInitializeFlag } from './consts/SDKInitializeFlag';\nimport { CustomerVehicle } from './models/customer_vehicle';\n\n// Maps the Android api to the public api (BringgDriverSdkAndroidType -> BringgDriverSDKType)\nexport function androidAPIToPublicAPITransform(\n  bringgDriverSdkAndroidType: BringgDriverSdkAndroidType\n): BringgDriverSDKType {\n  const {\n    logout,\n    startTask,\n    loginWithToken,\n    arriveAtWaypoint,\n    arriveAtWaypointWithCustomerVehicle,\n    arriveAtWaypointWithCustomerVehicleAndVehicleId,\n    leaveWaypoint,\n    updateWaypointEta,\n    addListenerToActiveTask,\n    addListenerToIsLoggedIn,\n    setUserTransportType,\n  } = bringgDriverSdkAndroidType;\n\n  const isLoggedInSubject = new BehaviorSubject<boolean>(false);\n  const activeTaskSubject = new BehaviorSubject<Task | null>(null);\n\n  const initBringgDriverSDK = async (\n    flags?: SDKInitializeFlag[]\n  ): Promise<void> => {\n    console.log('init with flags ' + flags);\n    await bringgDriverSdkAndroidType.init(flags ?? null);\n    await addListenerToActiveTask((activeTask) =>\n      activeTaskSubject.next(activeTask)\n    );\n    await addListenerToIsLoggedIn((isLoggedIn) => {\n      isLoggedInSubject.next(isLoggedIn);\n    });\n  };\n\n  const activeCustomerManager: ActiveCustomerManagerType = {\n    isLoggedIn: isLoggedInSubject,\n    loginWithToken,\n    logout,\n    startTask,\n    arriveAtWaypoint,\n    leaveWaypoint,\n    updateWaypointETA: (eta: Date): Promise<void> => {\n      const etaString = eta.toISOString();\n      return updateWaypointEta(etaString);\n    },\n    activeTask: activeTaskSubject,\n    setUserTransportType,\n    arriveAtWaypointWithCustomerVehicle: (\n      customerVehicle: CustomerVehicle\n    ): Promise<void> => {\n      if (customerVehicle.id == null) {\n        console.info(\n          'Arrive at waypoint with customer vehicle (empty vehicle id)'\n        );\n        return arriveAtWaypointWithCustomerVehicle(\n          customerVehicle.save_vehicle,\n          customerVehicle.license_plate,\n          customerVehicle.color,\n          customerVehicle.model,\n          customerVehicle.parking_spot\n        );\n      } else {\n        console.info('Arrive at waypoint with customer vehicle');\n        return arriveAtWaypointWithCustomerVehicleAndVehicleId(\n          customerVehicle.id,\n          customerVehicle.save_vehicle,\n          customerVehicle.license_plate,\n          customerVehicle.color,\n          customerVehicle.model,\n          customerVehicle.parking_spot\n        );\n      }\n    },\n  };\n  return { initBringgDriverSDK, activeCustomerManager };\n}\n"]}