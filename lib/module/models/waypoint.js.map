{"version":3,"sources":["waypoint.tsx"],"names":["parseISODateString","AddressType","PickupDropoffOption","waypointFromJSONObject","jsonObject","dateKeys","waypoint","forEach","key"],"mappings":"AAEA,SAASA,kBAAT,QAAmC,uBAAnC;AAEA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;GAAAA,W,KAAAA,W;;AASZ,WAAYC,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;GAAAA,mB,KAAAA,mB;;AAiEZ,OAAO,SAASC,sBAAT,CAAgCC,UAAhC,EAEM;AACX,QAAMC,QAAQ,GAAG,CACf,cADe,EAEf,eAFe,EAGf,cAHe,EAIf,iBAJe,EAKf,KALe,EAMf,KANe,EAOf,iBAPe,EAQf,eARe,CAAjB;AAUA,QAAMC,QAAQ,GAAG,EAAE,GAAGF;AAAL,GAAjB;AACAC,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,GAAD,IAAS;AACxBF,IAAAA,QAAQ,CAACE,GAAD,CAAR,GAAgBR,kBAAkB,CAACM,QAAQ,CAACE,GAAD,CAAT,CAAlC;AACD,GAFD;AAGA,SAAOF,QAAP;AACD","sourcesContent":["import { Customer } from './customer';\nimport { Contact } from './contact';\nimport { parseISODateString } from '../utils/parseISODate';\n\nexport enum AddressType {\n  commercial = 1,\n  residential = 2,\n  educational = 3,\n  government = 4,\n  medical = 5,\n  industrial = 6,\n}\n\nexport enum PickupDropoffOption {\n  none = -1,\n  pickup = 0,\n  dropoff = 1,\n  pickupAndDropoff = 2,\n}\n\nexport type Waypoint = {\n  // Ids\n  id: number;\n  task_id: number | null;\n\n  // Location\n  address: string | null;\n  address_second_line: string | null;\n  address_type: AddressType | null;\n  location_name: string | null;\n  lat: number | null;\n  lng: number | null;\n  zipcode: string | null;\n  borough: string | null;\n  city: string | null;\n  street: string | null;\n  house_number: number | null;\n  district: string | null;\n  neighborhood: string | null;\n  state: string | null;\n\n  // Times\n  checkin_time: Date | null;\n  checkout_time: Date | null;\n  scheduled_at: Date | null;\n  has_to_leave_by: Date | null;\n  etl: Date | null;\n  eta: Date | null;\n  no_earlier_than: Date | null;\n  no_later_than: Date | null;\n\n  // State\n  position: number | null;\n  done: boolean;\n  late: boolean;\n  asap: boolean;\n  rating: string | null;\n\n  // Behaviour\n  pickup_dropoff_option: PickupDropoffOption;\n  silent: boolean;\n  allow_editing_inventory: boolean;\n  must_approve_inventory: boolean;\n  phone_available: boolean;\n  find_me: boolean;\n  ui_data: { [key: string]: any } | { color?: string; number?: number } | null;\n\n  // Contact\n  phone: string | null;\n  company_name: string | null;\n  name: string | null;\n\n  // Relationships\n  customer: Customer | null;\n  contacts: Contact[] | null;\n  extra_customers: Customer[] | null;\n};\n\nexport function waypointFromJSONObject(jsonObject: {\n  [key: string]: any;\n}): Waypoint {\n  const dateKeys = [\n    'checkin_time',\n    'checkout_time',\n    'scheduled_at',\n    'has_to_leave_by',\n    'etl',\n    'eta',\n    'no_earlier_than',\n    'no_later_than',\n  ];\n  const waypoint = { ...jsonObject };\n  dateKeys.forEach((key) => {\n    waypoint[key] = parseISODateString(waypoint[key]);\n  });\n  return waypoint as Waypoint;\n}\n"]}