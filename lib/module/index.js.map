{"version":3,"sources":["index.tsx"],"names":["getIOSNativeModule","getAndroidNativeModule","Platform","iosAPIToPublicAPITransform","androidAPIToPublicAPITransform","bringgDriverSDK","OS","Error","initBringgDriverSDK","activeCustomerManager","Task","TaskStatus","Waypoint","Contact","Customer","TaskInventory","TaskNote","TransportType","SDKInitializeFlag"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,sBAAT,QAAuC,WAAvC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAKA,SAASC,0BAAT,QAA2C,mCAA3C;AACA,SAASC,8BAAT,QAA+C,uCAA/C;AAGA,IAAIC,eAAJ;;AAEA,IAAIH,QAAQ,CAACI,EAAT,KAAgB,KAApB,EAA2B;AACzBD,EAAAA,eAAe,GAAGF,0BAA0B,CAACH,kBAAkB,EAAnB,CAA5C;AACD,CAFD,MAEO,IAAIE,QAAQ,CAACI,EAAT,KAAgB,SAApB,EAA+B;AACpCD,EAAAA,eAAe,GAAGD,8BAA8B,CAACH,sBAAsB,EAAvB,CAAhD;AACD,CAFM,MAEA;AACL,QAAM,IAAIM,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,MAAM;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,IAAiDJ,eAAvD;AA2BA,SAASK,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASV,mBAAT,EAA8BC,qBAA9B","sourcesContent":["import { getIOSNativeModule } from './ios';\nimport { getAndroidNativeModule } from './android';\nimport { Platform } from 'react-native';\nimport { Task } from './models/task';\nimport { BehaviorSubject } from 'rxjs';\nimport { TransportType } from './models/transport_type';\nimport { CustomerVehicle } from './models/customer_vehicle';\nimport { iosAPIToPublicAPITransform } from './ios-api-to-public-api-transform';\nimport { androidAPIToPublicAPITransform } from './android-api-to-public-api-transform';\nimport { SDKInitializeFlag } from './consts/SDKInitializeFlag';\n\nlet bringgDriverSDK: BringgDriverSDKType;\n\nif (Platform.OS === 'ios') {\n  bringgDriverSDK = iosAPIToPublicAPITransform(getIOSNativeModule());\n} else if (Platform.OS === 'android') {\n  bringgDriverSDK = androidAPIToPublicAPITransform(getAndroidNativeModule());\n} else {\n  throw new Error('BringgDriverSDK supports iOS and Android only');\n}\n\nconst { initBringgDriverSDK, activeCustomerManager } = bringgDriverSDK;\n\nexport type ActiveCustomerManagerType = {\n  // login related\n  isLoggedIn: BehaviorSubject<boolean>;\n  loginWithToken(token: string, secret: string, region: string): Promise<void>;\n  logout(): Promise<void>;\n\n  // task related\n  startTask(taskId: number): Promise<void>;\n  arriveAtWaypoint(): Promise<void>;\n  arriveAtWaypointWithCustomerVehicle(\n    customerVehicle: CustomerVehicle\n  ): Promise<void>;\n  leaveWaypoint(): Promise<void>;\n  updateWaypointETA(eta: Date): Promise<void>;\n\n  activeTask: BehaviorSubject<Task | null>;\n\n  setUserTransportType(transportType: TransportType): Promise<void>;\n};\n\nexport type BringgDriverSDKType = {\n  initBringgDriverSDK: (flags?: SDKInitializeFlag[]) => Promise<void>;\n  activeCustomerManager: ActiveCustomerManagerType;\n};\n\nexport { Task, TaskStatus } from './models/task';\nexport { Waypoint } from './models/waypoint';\nexport { Contact } from './models/contact';\nexport { Customer } from './models/customer';\nexport { TaskInventory } from './models/task_inventory';\nexport { TaskNote } from './models/task_note';\nexport { TransportType } from './models/transport_type';\nexport { SDKInitializeFlag } from './consts/SDKInitializeFlag';\nexport { initBringgDriverSDK, activeCustomerManager };\n"]}