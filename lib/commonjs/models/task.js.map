{"version":3,"sources":["task.tsx"],"names":["TaskStatus","taskFromJSONString","jsonString","taskFromJSONObject","JSON","parse","jsonObject","dateKeys","task","way_points","map","waypointJSONObject","task_notes","taskNoteJSONObject","forEach","key"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;IAEYA,U;;;WAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;GAAAA,U,0BAAAA,U;;AA2CL,SAASC,kBAAT,CAA4BC,UAA5B,EAAoE;AACzE,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,SAAOC,kBAAkB,CAACC,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAD,CAAzB;AACD;;AAEM,SAASC,kBAAT,CAA4BG,UAA5B,EAAsE;AAC3E,QAAMC,QAAQ,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAjB;AACA,QAAMC,IAA4B,GAAG,EACnC,GAAGF,UADgC;AAEnCG,IAAAA,UAAU,EAAEH,UAAU,CAACG,UAAX,CAAsBC,GAAtB,CACTC,kBAAD,IACE,sCAAuBA,kBAAvB,CAFQ,CAFuB;AAMnCC,IAAAA,UAAU,EAAEN,UAAU,CAACM,UAAX,CAAsBF,GAAtB,CACTG,kBAAD,IACE,uCAAuBA,kBAAvB,CAFQ;AANuB,GAArC;AAWAN,EAAAA,QAAQ,CAACO,OAAT,CAAkBC,GAAD,IAAS;AACxBP,IAAAA,IAAI,CAACO,GAAD,CAAJ,GAAY,sCAAmBP,IAAI,CAACO,GAAD,CAAvB,CAAZ;AACD,GAFD;AAGA,SAAOP,IAAP;AACD","sourcesContent":["import { TaskInventory } from './task_inventory';\nimport { TaskNote, taskNoteFromJSONObject } from './task_note';\nimport { parseISODateString } from '../utils/parseISODate';\nimport { Waypoint, waypointFromJSONObject } from './waypoint';\n\nexport enum TaskStatus {\n  free = 0,\n  assigned = 1,\n  onTheWay = 2,\n  checkedIn = 3,\n  checkedOut = 4,\n  accepted = 6,\n  cancelled = 7,\n}\n\nexport type Task = {\n  // Ids\n  id: number;\n  external_id: string | null;\n  user_id: number | null;\n  linked_task_id: number | null;\n\n  // State and details\n  status: TaskStatus;\n  title: string | null;\n  priority: number | null;\n  asap?: boolean;\n  started_time: Date | null;\n  scheduled_at: Date | null;\n  active_way_point_id: number | null;\n  extras: { [key: string]: any };\n\n  // Configurations Ids\n  task_configuration_id: number | null;\n  tag_id: number | null;\n  task_type_id: number | null;\n\n  // Group task\n  group_uuid: string | null;\n  group_leader_id: number | null;\n\n  // Relationships\n  way_points: Waypoint[];\n  task_inventories: TaskInventory[] | null;\n  action_data: { [key: string]: any };\n  task_notes: TaskNote[] | null;\n};\n\nexport function taskFromJSONString(jsonString: string | null): Task | null {\n  if (!jsonString) {\n    return null;\n  }\n  return taskFromJSONObject(JSON.parse(jsonString));\n}\n\nexport function taskFromJSONObject(jsonObject: { [key: string]: any }): Task {\n  const dateKeys = ['started_time', 'scheduled_at'];\n  const task: { [key: string]: any } = {\n    ...jsonObject,\n    way_points: jsonObject.way_points.map(\n      (waypointJSONObject: { [key: string]: any }) =>\n        waypointFromJSONObject(waypointJSONObject)\n    ),\n    task_notes: jsonObject.task_notes.map(\n      (taskNoteJSONObject: { [key: string]: any }) =>\n        taskNoteFromJSONObject(taskNoteJSONObject)\n    ),\n  };\n  dateKeys.forEach((key) => {\n    task[key] = parseISODateString(task[key]);\n  });\n  return task as Task;\n}\n"]}